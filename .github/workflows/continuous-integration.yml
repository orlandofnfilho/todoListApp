# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: continuous Integration with Github Actions

on:
  push:
    branches:
      - main
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker hub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1          

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/todolist:latest
        
    
    - name: Tag, and push docker image to Amazon ECR Public
      env:
          REGISTRY: ${{ secrets.IMAGE_REPO_URL }}
      run: |
          docker build -t $REGISTRY:latest .
          docker push $REGISTRY:latest
          
    - name: Download task definition
      env:
        TASK: ${{ secrets.TASK_DEFINITION }}
      run: |
        aws ecs describe-task-definition --task-definition $TASK --query taskDefinition > task-definition.json
    
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ secrets.IMAGE_REPO_URL }}:latest
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ secrets.TASK_DEFINITION }}
        service: ${{ secrets.AWS_CLUSTER_SERVICE }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true
